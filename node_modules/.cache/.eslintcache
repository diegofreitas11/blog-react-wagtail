[{"/home/diegofreitas/blog-react-wagtail/src/index.js":"1","/home/diegofreitas/blog-react-wagtail/src/service/api.js":"2"},{"size":6349,"mtime":1613053898596,"results":"3","hashOfConfig":"4"},{"size":117,"mtime":1612904179187,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8","usedDeprecatedRules":"9"},"1az61tz",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/diegofreitas/blog-react-wagtail/src/index.js",["12","13","14","15"],"import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api from './service/api';\nimport ReactLoading from 'react-loading';\n\n\nconst PostPage = (props) => {\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    async function loadPost(){\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      let result = await api.get(\n        `/api/v2/pages/${props.id}/`\n      )\n      setPost(result.data)\n    }\n\n    if(!post)\n      loadPost();\n  })\n\n  return(\n    <div id = 'main'>\n      {(post &&\n        <div id = 'post'>\n          <img\n            src = {`http://localhost:8000${post.post_image.url}`}\n            width = '100%'\n            height = '550px'\n          />\n          <h1>{post.title}</h1>\n\n          <div \n            id = 'text'\n            dangerouslySetInnerHTML={{\n              __html: post.body\n            }} \n          />\n        </div>\n      )||\n        <div \n          id = 'loading-container'\n        >\n          <ReactLoading type = {'spokes'} color = {'#000'} height={200} width={100}/>\n        </div>\n      }\n    </div>\n  )\n}\n\n\nclass Main extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount(){\n      this.loadData();\n    }\n\n    loadData = async () => {\n      try{\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        let result = await api.get(\n          '/api/v2/pages/?type=posts.PostPage&fields=post_image&order=-id&limit=5'\n        );\n\n        let firstItem = result.data.items[0];\n        result.data.items.shift();\n\n        this.setState({\n          firstItem,\n          list: result.data.items,\n          postsLoaded: 5\n        });\n      }catch(e){\n        console.log(e)\n      }\n    }\n\n    loadMore = async () => {\n\n      this.setState({\n        loadingMore: true\n      })\n\n      try{\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        let result = await api.get(\n          `/api/v2/pages/?type=posts.PostPage&fields=post_image&order=-id`+\n          `&offset=${this.state.postsLoaded}&limit=5`\n        );\n\n        this.setState({\n          list: this.state.list.concat(result.data.items),\n          postsLoaded: this.state.postsLoaded + result.data.items.length,\n          loadingMore: false\n        })\n\n      }catch(e){\n        console.log(e)\n      }\n    }\n\n    handlePostClick = (id) => {\n      this.setState({\n        openPostPage: id\n      })\n    }\n    \n    handleNavClick = () => {\n      this.setState({\n        openPostPage: null,\n        list: null\n      });\n\n      this.loadData();\n    }\n\n    organizePostRows = (list) => {\n      var content = []\n\n      for(let i = 0; i < list.length ; i+=2){\n\n        let row = {leftItem: list[i]};\n        if(list[i+1]) row.rightItem = list[i+1];\n        content.push(row);\n\n      }\n      return content;\n    }\n\n    render(){\n      var { firstItem, list, openPostPage, loadingMore } = this.state;\n\n      console.log(openPostPage)\n\n      if(list)\n        var postList = this.organizePostRows(list);\n        \n\n      return(\n        <div id = 'wrapper'>\n\n          <div id = 'top-bar'> \n            <h1 onClick = {this.handleNavClick}>RADIOHIPERATIVO</h1>\n          </div>\n\n          \n          {list && !openPostPage &&\n            <div id = 'main'> \n              <div \n                id = 'head-image-container'\n                onClick = {() => this.handlePostClick(firstItem.id)}\n              >\n                <img \n                  src = {`http://localhost:8000${firstItem.post_image.url}`}\n                  width = '100%'\n                  height =  '550px'\n                  className = 'image'\n                />\n\n                <div id = 'head-image-mask'/>\n\n                <p>\n                  {firstItem.title}\n                </p>\n\n              </div>\n\n              <div id='post-list'> \n                {postList.map((item, index) => (\n                  <div \n                    className = 'post-row'\n                    key = {index}\n                  >\n                    <div \n                      className = 'image-container-left'\n                      onClick = {() => this.handlePostClick(item.leftItem.id)}\n                    >\n                      <img\n                        src = {`http://localhost:8000${item.leftItem.post_image.url}`}\n                        width = '100%'\n                        height = '275px' \n                        className = 'image'\n                      />\n                      <p>{item.leftItem.title}</p>\n                    </div>\n                    {item.rightItem &&\n                      <div \n                        className = 'image-container-right'\n                        onClick = {() => this.handlePostClick(item.rightItem.id)}\n                      >\n                        <img\n                          src = {`http://localhost:8000${item.rightItem.post_image.url}`} \n                          width = '100%'\n                          height = '275px'\n                          className = 'image'\n                        />\n                        <p>{item.rightItem.title}</p>\n                      </div>\n                    }\n                  </div>\n                ))}\n              </div>\n\n              <div \n                id = 'load-more-button'\n                onClick = {this.loadMore}\n              > \n\n                {(!loadingMore && 'Carregar Mais') ||\n                  <div id = 'loading-more-container'>\n                    <ReactLoading \n                      type = {'bubbles'} \n                      color = {'#000'} \n                      height={10} \n                      width={30}\n                    />\n                  </div>\n                }\n                \n              </div>\n\n            </div>   \n           }\n\n           {!list && !openPostPage &&\n            <div id = 'main'>\n              <div \n                id = 'loading-container'\n              >\n                <ReactLoading \n                  type = {'spokes'} \n                  color = {'#000'} \n                  height={200} \n                  width={100}\n                />\n              </div>\n            </div>\n            }\n\n           {openPostPage && <PostPage id={openPostPage}/>}\n        </div>\n      )\n    }\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n\n",["16","17"],"/home/diegofreitas/blog-react-wagtail/src/service/api.js",[],{"ruleId":"18","severity":1,"message":"19","line":28,"column":11,"nodeType":"20","endLine":32,"endColumn":13},{"ruleId":"18","severity":1,"message":"19","line":159,"column":17,"nodeType":"20","endLine":164,"endColumn":19},{"ruleId":"18","severity":1,"message":"19","line":184,"column":23,"nodeType":"20","endLine":189,"endColumn":25},{"ruleId":"18","severity":1,"message":"19","line":197,"column":25,"nodeType":"20","endLine":202,"endColumn":27},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["25"],"no-negated-in-lhs",["26"],"no-global-assign","no-unsafe-negation"]