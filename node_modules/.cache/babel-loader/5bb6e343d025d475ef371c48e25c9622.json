{"ast":null,"code":"var _jsxFileName = \"/home/diegofreitas/blog-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api from './service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"teste\",\n      children: \"Oi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostPage;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = async () => {\n      try {\n        let result = await api.get('/api/v2/pages/?type=posts.PostPage&fields=post_image&order=-id');\n        let firstItem = result.data.items[0];\n        result.data.items.shift();\n        this.setState({\n          firstItem,\n          list: result.data.items\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        openPostPage: true\n      });\n    };\n\n    this.organizePostRows = list => {\n      var content = [];\n\n      for (let i = 0; i < list.length; i += 2) {\n        let row = {\n          leftItem: list[i]\n        };\n        if (list[i + 1]) row.rightItem = list[i + 1];\n        content.push(row);\n      }\n\n      console.log(content);\n      return content;\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    var {\n      firstItem,\n      list,\n      openPostPage\n    } = this.state;\n    if (list) var postList = this.organizePostRows(list);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"RADIOHIPERATIVO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), list && !openPostPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"head-image-container\",\n          onClick: this.handleClick(firstItem.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000${firstItem.post_image.url}`,\n            width: \"100%\",\n            height: firstItem.post_image.height,\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: firstItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"post-list\",\n          children: postList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8000${item.leftItem.post_image.url}`,\n                width: \"100%\",\n                height: item.leftItem.post_image.height / 2,\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.leftItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8000${item.rightItem.post_image.url}`,\n                width: \"100%\",\n                height: item.rightItem.post_image.height / 2,\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.rightItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), openPostPage && /*#__PURE__*/_jsxDEV(PostPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/diegofreitas/blog-frontend/src/index.js"],"names":["React","ReactDOM","api","PostPage","Main","Component","constructor","props","loadData","result","get","firstItem","data","items","shift","setState","list","e","console","log","handleClick","openPostPage","organizePostRows","content","i","length","row","leftItem","rightItem","push","state","componentDidMount","render","postList","id","post_image","url","height","title","map","item","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api from './service/api';\n\n\n\nconst PostPage = () => {\n  return(\n    <div id='main'>\n      <h1 id='teste'>Oi</h1>\n    </div>\n  )\n}\n\n\nclass Main extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount(){\n      this.loadData();\n    }\n\n    loadData = async () => {\n      try{\n        let result = await api.get(\n          '/api/v2/pages/?type=posts.PostPage&fields=post_image&order=-id'\n        );\n\n        let firstItem = result.data.items[0];\n        result.data.items.shift();\n\n        this.setState({\n          firstItem,\n          list: result.data.items\n        });\n      }catch(e){\n        console.log(e)\n      }\n    }\n\n    handleClick = () => {\n      this.setState({\n        openPostPage: true\n      })\n    }\n\n    organizePostRows = (list) => {\n      var content = []\n\n      for(let i = 0; i < list.length ; i+=2){\n\n        let row = {leftItem: list[i]};\n        if(list[i+1]) row.rightItem = list[i+1];\n        content.push(row);\n\n      }\n\n      console.log(content)\n      return content;\n    }\n\n    render(){\n      var { firstItem, list, openPostPage } = this.state;\n\n      if(list)\n        var postList = this.organizePostRows(list);\n        \n\n      return(\n        <div id = 'wrapper'>\n\n          <div id = 'top-bar'> \n            <h1>RADIOHIPERATIVO</h1>\n          </div>\n\n          \n          {list && !openPostPage &&\n            <div id = 'main'> \n              <div \n                id = 'head-image-container'\n                onClick = {this.handleClick(firstItem.id)}\n              >\n                <img \n                  src = {`http://localhost:8000${firstItem.post_image.url}`}\n                  width = '100%'\n                  height =  {firstItem.post_image.height}\n                  className = 'image'\n                />\n\n                <p>\n                  {firstItem.title}\n                </p>\n\n              </div>\n\n              <div id='post-list'> \n                {postList.map(item => (\n                  <div className = 'post-row'>\n                    <div className = 'image-container-left'>\n                      <img\n                        src = {`http://localhost:8000${item.leftItem.post_image.url}`}\n                        width = '100%'\n                        height = {item.leftItem.post_image.height / 2} \n                        className = 'image'\n                      />\n                      <p>{item.leftItem.title}</p>\n                    </div>\n\n                    <div className = 'image-container-right'>\n                      <img\n                        src = {`http://localhost:8000${item.rightItem.post_image.url}`} \n                        width = '100%'\n                        height = {item.rightItem.post_image.height / 2}\n                        className = 'image'\n                      />\n                      <p>{item.rightItem.title}</p>\n                    </div>\n\n                  </div>\n                ))}\n              </div>\n\n            </div>   \n           }\n\n           {openPostPage && <PostPage />}\n        </div>\n      )\n    }\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}