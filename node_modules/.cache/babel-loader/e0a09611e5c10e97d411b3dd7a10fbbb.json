{"ast":null,"code":"var _jsxFileName = \"/home/diegofreitas/blog-frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api from './service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = props => {\n  _s();\n\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    async function loadPost() {\n      let result = await api.get(`/api/v2/pages/${props.id}/`);\n      setPost(result.data);\n    }\n\n    if (!post) loadPost();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: post && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000${post.post_image.url}`,\n        width: \"80%\",\n        height: post.post_image.height,\n        id: \"post-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"VAK5tdJEk0cqnRsmbvM4YDyoQLs=\");\n\n_c = PostPage;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = async () => {\n      try {\n        let result = await api.get('/api/v2/pages/?type=posts.PostPage&fields=post_image&order=-id');\n        let firstItem = result.data.items[0];\n        result.data.items.shift();\n        this.setState({\n          firstItem,\n          list: result.data.items\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        openPostPage: id\n      });\n    };\n\n    this.organizePostRows = list => {\n      var content = [];\n\n      for (let i = 0; i < list.length; i += 2) {\n        let row = {\n          leftItem: list[i]\n        };\n        if (list[i + 1]) row.rightItem = list[i + 1];\n        content.push(row);\n      }\n\n      return content;\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    var {\n      firstItem,\n      list,\n      openPostPage\n    } = this.state;\n    console.log(openPostPage);\n    if (list) var postList = this.organizePostRows(list);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"RADIOHIPERATIVO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), list && !openPostPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"head-image-container\",\n          onClick: () => this.handleClick(firstItem.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000${firstItem.post_image.url}`,\n            width: \"100%\",\n            height: firstItem.post_image.height,\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: firstItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"post-list\",\n          children: postList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container-left\",\n              onClick: () => this.handleClick(item.leftItem.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8000${item.leftItem.post_image.url}`,\n                width: \"100%\",\n                height: item.leftItem.post_image.height / 2,\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.leftItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container-right\",\n              onClick: () => this.handleClick(item.rightItem.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8000${item.rightItem.post_image.url}`,\n                width: \"100%\",\n                height: item.rightItem.post_image.height / 2,\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.rightItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), openPostPage && /*#__PURE__*/_jsxDEV(PostPage, {\n        id: openPostPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 170,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/diegofreitas/blog-frontend/src/index.js"],"names":["React","useEffect","useState","ReactDOM","api","PostPage","props","post","setPost","loadPost","result","get","id","data","post_image","url","height","title","Main","Component","constructor","loadData","firstItem","items","shift","setState","list","e","console","log","handleClick","openPostPage","organizePostRows","content","i","length","row","leftItem","rightItem","push","state","componentDidMount","render","postList","map","item","index","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport api from './service/api';\n\n\n\nconst PostPage = (props) => {\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    async function loadPost(){\n      let result = await api.get(\n        `/api/v2/pages/${props.id}/`\n      )\n      setPost(result.data)\n    }\n\n    if(!post)\n      loadPost();\n  })\n\n  return(\n    <div id = 'main'>\n      {post &&\n        <div id = 'post'>\n          <img\n            src = {`http://localhost:8000${post.post_image.url}`}\n            width = '80%'\n            height = {post.post_image.height}\n            id = 'post-image'\n          />\n          <h1>{post.title}</h1>\n        </div>\n      }\n    </div>\n  )\n}\n\n\nclass Main extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount(){\n      this.loadData();\n    }\n\n    loadData = async () => {\n      try{\n        let result = await api.get(\n          '/api/v2/pages/?type=posts.PostPage&fields=post_image&order=-id'\n        );\n\n        let firstItem = result.data.items[0];\n        result.data.items.shift();\n\n        this.setState({\n          firstItem,\n          list: result.data.items,\n        });\n      }catch(e){\n        console.log(e)\n      }\n    }\n\n    handleClick = (id) => {\n      this.setState({\n        openPostPage: id\n      })\n    }\n\n    organizePostRows = (list) => {\n      var content = []\n\n      for(let i = 0; i < list.length ; i+=2){\n\n        let row = {leftItem: list[i]};\n        if(list[i+1]) row.rightItem = list[i+1];\n        content.push(row);\n\n      }\n      return content;\n    }\n\n    render(){\n      var { firstItem, list, openPostPage } = this.state;\n\n      console.log(openPostPage)\n\n      if(list)\n        var postList = this.organizePostRows(list);\n        \n\n      return(\n        <div id = 'wrapper'>\n\n          <div id = 'top-bar'> \n            <h1>RADIOHIPERATIVO</h1>\n          </div>\n\n          \n          {list && !openPostPage &&\n            <div id = 'main'> \n              <div \n                id = 'head-image-container'\n                onClick = {() => this.handleClick(firstItem.id)}\n              >\n                <img \n                  src = {`http://localhost:8000${firstItem.post_image.url}`}\n                  width = '100%'\n                  height =  {firstItem.post_image.height}\n                  className = 'image'\n                />\n\n                <p>\n                  {firstItem.title}\n                </p>\n\n              </div>\n\n              <div id='post-list'> \n                {postList.map((item, index) => (\n                  <div \n                    className = 'post-row'\n                    key = {index}\n                  >\n                    <div \n                      className = 'image-container-left'\n                      onClick = {() => this.handleClick(item.leftItem.id)}\n                    >\n                      <img\n                        src = {`http://localhost:8000${item.leftItem.post_image.url}`}\n                        width = '100%'\n                        height = {item.leftItem.post_image.height / 2} \n                        className = 'image'\n                      />\n                      <p>{item.leftItem.title}</p>\n                    </div>\n\n                    <div \n                      className = 'image-container-right'\n                      onClick = {() => this.handleClick(item.rightItem.id)}\n                    >\n                      <img\n                        src = {`http://localhost:8000${item.rightItem.post_image.url}`} \n                        width = '100%'\n                        height = {item.rightItem.post_image.height / 2}\n                        className = 'image'\n                      />\n                      <p>{item.rightItem.title}</p>\n                    </div>\n\n                  </div>\n                ))}\n              </div>\n\n            </div>   \n           }\n\n           {openPostPage && <PostPage id={openPostPage}/>}\n        </div>\n      )\n    }\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}